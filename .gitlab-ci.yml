stages:
  - secrets
  - droplets
  - build
  - deploy

elixir:
  stage: secrets

  image: bitwalker/alpine-elixir:1.7.3

  script:
    - export VERSION=0.0.$CI_PIPELINE_IID
    - ./scripts/test.sh
    - ./scripts/secret.sh

  artifacts:
    paths:
    - .env

create_droplets:
  stage: droplets

  image: golang:latest

  script:
    - go run golang/main.go

build_container:
  dependencies:
    - elixir

  stage: build

  image: docker:stable

  services:
    - docker:dind

  before_script:
    - docker info

  script:
    - export VERSION=0.0.$CI_PIPELINE_IID
    - export SMACHE_BUILD=smache:v$CI_PIPELINE_IID
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/selfup/$SMACHE_BUILD -f Docker.erl.release.Dockerfile .
    - docker push registry.gitlab.com/selfup/$SMACHE_BUILD

deploy:
  dependencies:
    - elixir

  stage: deploy

  image: docker:stable

  services:
    - docker:dind

  before_script:
    - docker info
  
  script:
    - export VERSION=0.0.$CI_PIPELINE_IID
    - export SMACHE_BUILD=smache:v$CI_PIPELINE_IID
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull registry.gitlab.com/selfup/$SMACHE_BUILD
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SMACHE_NODE_SSH_PRIV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - export VERSION=0.0.$CI_PIPELINE_IID
    - source .env && export UPLINK_NODE=$UPLINK_NODE export PRIVATE_IP=$PRIVATE_IP && ./scripts/full.release.sh
